name: Team13 test

on:
  workflow_call:

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: npm

      # Step 3: Install Dependencies
      - name: Install Dependencies
        run: npm ci


      # Step 4: Code Quality Checks
      - name: Fix Formatting Errors
        run: npm run format:fix

      - name: Check for Formatting Errors
        run: npm run format

      - name: Check for ESLint Errors
        run: npm run lint

      - name: Check for Type Errors
        run: npm run typecheck

      # Step 5: Prepare Environment for Build1
      - name: Create .env File
        run: echo "FLAGSMITH_KEY=${{ secrets.FLAGSMITH_KEY }}" > .env

      # Step 6: Build Next.js Application
      - name: Build Next.js Application
        run: npm run build

      # Step 7: Verify Build Output
      - name: Verify Build Output
        run: ls -la .next/

      # Step 8: Upload Build Artifacts (optional)
      - name: Upload Build Artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build
          path: .next/

      # Step 9: Run Unit Tests
      - name: Run Unit Tests
        run: npm run test

      # Step 10: Upload Coverage Reports
      - name: Upload Coverage Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage
          path: coverage/

      # Step 11: Report to Codecov
      - name: Upload to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Set Playwright Version
        run: |
          export PLAYWRIGHT_VERSION="1.49.0"
          echo "Playwright's Version: $PLAYWRIGHT_VERSION"

      - name: Cache Playwright Browsers
        uses: actions/cache@v3
        id: cache-playwright
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install Playwright Browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      # Step 12: End-to-End (E2E) Testing Setup
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      # Step 13: Run E2E Tests
      - name: Run E2E Tests
        run: npm run test:e2e
        env:
          FLAGSMITH_KEY: ${{ secrets.FLAGSMITH_KEY }}

      # Step 14: Upload Playwright Reports
      - name: Upload Playwright Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/

      # Step 15: Notify on Slack (Failure Only)
      - name: Notify Slack on Failure
        uses: slackapi/slack-github-action@v2.0.0
        if: failure()
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "ðŸ›‘ *<https://github.com/${{github.repository}}/actions/runs/${{ github.run_id }}|${{ github.workflow }} workflow run>* failed."
                  }
                }
              ]
            }
          payload-templated: true
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: webhook-trigger
